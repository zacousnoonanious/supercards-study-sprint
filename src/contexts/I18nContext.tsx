
import React, { createContext, useContext, useState, useEffect } from 'react';

// Consolidated English translations
const translations = {
  common: {
    save: "Save",
    delete: "Delete",
    apply: "Apply",
    cancel: "Cancel",
    ok: "OK",
    yes: "Yes",
    no: "No",
    loading: "Loading...",
    error: "Error",
    success: "Success",
    warning: "Warning",
    info: "Info",
    close: "Close",
    open: "Open",
    edit: "Edit",
    view: "View",
    create: "Create",
    update: "Update",
    remove: "Remove",
    add: "Add",
    search: "Search",
    filter: "Filter",
    sort: "Sort",
    export: "Export",
    import: "Import",
    copy: "Copy",
    paste: "Paste",
    cut: "Cut",
    undo: "Undo",
    redo: "Redo",
    select: "Select",
    selectAll: "Select All",
    deselectAll: "Deselect All",
    refresh: "Refresh",
    reload: "Reload",
    reset: "Reset",
    clear: "Clear",
    submit: "Submit",
    back: "Back",
    next: "Next",
    previous: "Previous",
    continue: "Continue",
    finish: "Finish",
    done: "Done",
    settings: "Settings",
    help: "Help",
    about: "About",
    contact: "Contact",
    privacy: "Privacy",
    terms: "Terms",
    login: "Login",
    logout: "Logout",
    register: "Register",
    signup: "Sign Up",
    signin: "Sign In",
    forgotPassword: "Forgot Password",
    resetPassword: "Reset Password",
    changePassword: "Change Password",
    profile: "Profile",
    account: "Account",
    dashboard: "Dashboard",
    home: "Home",
    upload: "Upload",
    download: "Download",
    share: "Share",
    print: "Print",
    preview: "Preview",
    publish: "Publish",
    unpublish: "Unpublish",
    draft: "Draft",
    archive: "Archive",
    restore: "Restore",
    duplicate: "Duplicate",
    move: "Move",
    rename: "Rename",
    tag: "Tag",
    tags: "Tags",
    category: "Category",
    categories: "Categories",
    date: "Date",
    time: "Time",
    name: "Name",
    title: "Title",
    description: "Description",
    content: "Content",
    image: "Image",
    video: "Video",
    audio: "Audio",
    file: "File",
    files: "Files",
    folder: "Folder",
    folders: "Folders",
    size: "Size",
    type: "Type",
    format: "Format",
    quality: "Quality",
    resolution: "Resolution",
    duration: "Duration",
    author: "Author",
    created: "Created",
    updated: "Updated",
    modified: "Modified",
    published: "Published",
    status: "Status",
    active: "Active",
    inactive: "Inactive",
    enabled: "Enabled",
    disabled: "Disabled",
    public: "Public",
    private: "Private",
    visible: "Visible",
    hidden: "Hidden",
    available: "Available",
    unavailable: "Unavailable",
    online: "Online",
    offline: "Offline",
    connected: "Connected",
    disconnected: "Disconnected",
    synced: "Synced",
    pending: "Pending",
    processing: "Processing",
    completed: "Completed",
    failed: "Failed",
    cancelled: "Cancelled",
    expired: "Expired",
    valid: "Valid",
    invalid: "Invalid",
    required: "Required",
    optional: "Optional",
    recommended: "Recommended",
    advanced: "Advanced",
    basic: "Basic",
    simple: "Simple",
    complex: "Complex",
    automatic: "Automatic",
    manual: "Manual",
    custom: "Custom",
    default: "Default",
    none: "None",
    all: "All",
    any: "Any",
    other: "Other",
    unknown: "Unknown",
    cardNotFound: "Card not found",
    goBack: "Go Back",
    timeRemaining: "Time remaining",
    shuffleCards: "Shuffle Cards",
    studyMode: "Study Mode",
    autoFlip: "Auto Flip",
    countdownTimer: "Countdown Timer",
    seconds: "seconds",
    noTimer: "No Timer",
    saveSettings: "Save Settings",
    studySettings: "Study Settings",
    deckComplete: "Deck Complete",
    deckCompleteMessage: "You've reached the end of the deck!",
    setNotFound: "Set not found",
    noCardsInSet: "No cards in this set",
    correct: "Correct",
    incorrect: "Incorrect",
    accuracy: "Accuracy",
    of: "of",
    cardOverview: "Card Overview",
    clickToEdit: "Click to edit",
    showIcons: "Show Icons",
    showText: "Show Text",
    toggleView: "Toggle View",
  },
  editor: {
    content: "Content",
    fontSize: "Font Size",
    color: "Color",
    bold: "Bold",
    italic: "Italic",
    underline: "Underline",
    imageUrl: "Image URL",
    enterImageUrl: "Enter image URL",
    options: "Options",
    correctAnswer: "Correct Answer",
    addOption: "Add Option",
    deleteElement: "Delete Element",
    front: "Front",
    back: "Back",
    width: "Width",
    height: "Height",
    enterTextContent: "Enter text content",
    enterYourText: "Enter your text...",
    clickToEditText: "Click to edit text",
    textSettings: "Text Settings",
    imageSettings: "Image Settings",
    "multiple-choiceSettings": "Multiple Choice Settings",
    "true-falseSettings": "True/False Settings",
    "fill-in-blankSettings": "Fill in Blank Settings",
    "audioSettings": "Audio Settings",
    "youtubeSettings": "YouTube Settings",
    "drawingSettings": "Drawing Settings",
    "deck-embedSettings": "Deck Embed Settings",
    textFormatting: "Text Formatting",
    hyperlink: "Hyperlink",
    enterUrl: "Enter URL (https://...)",
    uploadImage: "Upload Image",
    textColor: "Text Color",
    backgroundColor: "Background Color",
    textAlign: "Text Align",
    left: "Left",
    center: "Center",
    right: "Right",
    textStyle: "Text Style",
    alignLeft: "Align Left",
    alignCenter: "Align Center",
    alignRight: "Align Right",
    alignJustify: "Justify",
    font: "Font",
    bg: "BG",
    size: "Size",
    element: "Element",
    position: "Position",
    rotation: "Rotation",
    opacity: "Opacity",
    border: "Border",
    borderRadius: "Border Radius",
    zIndex: "Z-Index",
    advancedOptions: "Advanced Options",
    elementOptions: "Element Options",
    blanks: "Blanks",
    noElementSelected: "No element selected",
    clickElementToEdit: "Click on an element to view and edit its properties",
    clickToEdit: "Click to edit",
  },
  toolbar: {
    previousCard: "Previous card",
    nextCard: "Next card",
    addText: "Add text element",
    addImage: "Add image element",
    addAudio: "Add audio element",
    addYoutube: "Add YouTube video",
    addMultipleChoice: "Add multiple choice",
    addTrueFalse: "Add true/false",
    addFillInBlank: "Add fill in blank",
    addDrawing: "Add drawing canvas",
    addDeckEmbed: "Embed deck",
    addTTS: "Text-to-Speech",
    arrange: "Arrange",
    arrangeGrid: "Grid",
    arrangeCenter: "Center",
    arrangeJustify: "Justify",
    arrangeStack: "Stack",
    arrangeAlignLeft: "Align Left",
    arrangeAlignCenter: "Align Center",
    arrangeAlignRight: "Align Right",
    arrangeScaleToFit: "Scale to Fit",
    grid: "Grid",
    hideGrid: "Hide Grid",
    showGrid: "Show Grid",
    cardDimensions: "Card Dimensions",
    createNewCard: "Create new card",
    card: "Card",
    save: "Save",
  },
  contextMenu: {
    bringToFront: "Bring to Front",
    sendToBack: "Send to Back",
    moveUp: "Move Up",
    moveDown: "Move Down",
    duplicate: "Duplicate",
    delete: "Delete",
    copy: "Copy",
    paste: "Paste",
    properties: "Properties",
  },
  study: {
    loading: "Loading...",
    cardNotFound: "Card not found",
    showAnswer: "Show Answer",
    nextCard: "Next Card",
    previousCard: "Previous Card",
    flipCard: "Flip Card",
    studyComplete: "Study Complete!",
    restartStudy: "Restart Study",
    backToLibrary: "Back to Library",
    revealAnswer: "Reveal Answer",
    hideHint: "Hide Hint",
    showHint: "Show Hint",
    studyAgain: "Study Again",
    backToSet: "Back to Set",
    showQuestion: "Show Question",
    frontSide: "Front Side",
    backSide: "Back Side",
    hint: "Hint",
    studyModeSettings: "Study Mode Settings",
    flashcardMode: "Flashcard Mode",
    quizMode: "Quiz Mode",
    reviewMode: "Review Mode",
    mixedMode: "Mixed Mode",
    allowMultipleAttempts: "Allow Multiple Attempts",
    showHints: "Show Hints",
    quizModeNote: "Quiz mode only allows one attempt per question",
    startStudy: "Start Study",
    cardsText: "cards",
    timeUp: "Time's up!",
    continueStudying: "Continue Studying",
  },
  nav: {
    home: "Home",
    library: "Library",
    create: "Create",
    study: "Study",
    profile: "Profile",
    settings: "Settings",
    help: "Help",
    logout: "Logout",
    dashboard: "Dashboard",
    decks: "Decks",
    marketplace: "Marketplace",
    navigation: "Navigation",
    signOut: "Sign Out",
  },
  forms: {
    name: "Name",
    email: "Email",
    password: "Password",
    confirmPassword: "Confirm Password",
    firstName: "First Name",
    lastName: "Last Name",
    username: "Username",
    phone: "Phone",
    address: "Address",
    city: "City",
    state: "State",
    country: "Country",
    zipCode: "Zip Code",
    website: "Website",
    company: "Company",
    jobTitle: "Job Title",
    bio: "Bio",
    notes: "Notes",
    tags: "Tags",
    category: "Category",
    priority: "Priority",
    status: "Status",
    dueDate: "Due Date",
    startDate: "Start Date",
    endDate: "End Date",
    createdAt: "Created At",
    updatedAt: "Updated At",
  },
  profile: {
    title: "Profile",
    personalInfo: "Personal Information",
    firstName: "First Name",
    lastName: "Last Name",
    email: "Email",
    language: "Language",
    changeAvatar: "Change Avatar",
    updateSuccess: "Profile updated successfully",
    updateError: "Failed to update profile",
    updateDescription: "Update your profile information and preferences",
    emailCannotChange: "Email cannot be changed",
    chooseAvatarFromSelector: "Choose Avatar from photo selector",
  },
  theme: {
    settings: "Theme Settings",
    colorTheme: "Color Theme",
    interfaceSize: "Interface Size",
  },
  lang: {
    en: "English",
    es: "Español",
    fr: "Français",
    de: "Deutsch",
    it: "Italiano",
    pt: "Português",
    ru: "Русский",
    ja: "日本語",
    ko: "한국어",
    ar: "العربية",
    hi: "हिन्दी",
    tr: "Türkçe",
    pl: "Polski",
    nl: "Nederlands",
    th: "ไทย",
    vi: "Tiếng Việt",
    uk: "Українська",
    "zh-CN": "简体中文",
    "zh-TW": "繁體中文",
    id: "Bahasa Indonesia",
    tl: "Filipino",
  },
  marketplace: {
    title: "Marketplace",
    subtitle: "Discover and download flashcard sets created by the community",
    search: "Search flashcard sets...",
    featured: "Featured Sets",
    free: "Free",
    preview: "Preview",
    download: "Download",
    noResults: "No results found",
    noResultsMessage: "Try adjusting your search terms",
    by: "by",
  },
  sets: {
    create: "Create New Set",
    title: "Set Title",
    description: "Description",
    myDecks: "My Decks",
    createdAt: "Created",
    cards: "cards",
    study: "Study",
    edit: "Edit",
    delete: "Delete",
    noDeck: "No decks found",
    createFirst: "Create your first flashcard deck to get started!",
  },
  setView: {
    notFound: "Set not found",
    backToDecks: "Back to Decks",
    enhancedOverview: "Enhanced Overview",
    aiGenerate: "AI Generate",
    aiGenerateTitle: "Generate AI Cards",
    deckSettings: "Deck Settings",
    permanentShuffle: "Permanent Shuffle",
    permanentShuffleDesc: "When enabled, cards will always be shuffled during study",
    shuffleEnabled: "Permanent shuffle enabled",
    shuffleDisabled: "Permanent shuffle disabled",
    failedUpdateShuffle: "Failed to update shuffle setting",
    cardNumber: "Card {number}",
    front: "Front",
    back: "Back",
    createNewCard: "Create New Card",
    createNewCardTitle: "Create New Card",
    cardCreated: "Card created successfully",
    cardDeleted: "Card deleted successfully",
    cardCreatedFromTemplate: "Card created from {templateName} template",
    defaultTemplateSet: "Default template set",
    defaultTemplateMessage: "New cards will use {templateName} template by default",
    failedCreateCard: "Failed to create card",
    failedDeleteCard: "Failed to delete card",
    failedCreateFromTemplate: "Failed to create card from template",
    success: "Success",
    error: "Error",
    aiCardsAdded: "AI-generated cards added successfully",
  },
  ai: {
    generateDeck: "Generate AI Deck",
    topic: "Topic",
    enterTopic: "Enter a topic to generate flashcards about...",
    numberOfCards: "Number of Cards",
    difficulty: "Difficulty Level",
    beginner: "Beginner",
    intermediate: "Intermediate",
    advanced: "Advanced",
    language: "Language",
    includeImages: "Include Images",
    generateCards: "Generate Cards",
    generating: "Generating flashcards...",
    generationComplete: "Generation complete!",
    generationFailed: "Failed to generate flashcards",
    advancedGenerator: "Advanced AI Educational Content Generator",
    educationalTopic: "Educational Topic",
    educationalTopicPlaceholder: "e.g., 'Medieval castle architecture and defensive strategies', 'Photosynthesis process in detail', 'World War 2 timeline with key battles'",
    templateStrategy: "Template Strategy",
    autoSelectTemplates: "Auto-Select Templates (AI chooses best layout)",
    fixedTemplate: "Fixed Template (All cards same layout)",
    mixedTemplates: "Mixed Templates (Select multiple)",
    chooseTemplate: "Choose Template",
    selectTemplateToUse: "Select Templates to Use",
    contentStrategy: "Content Strategy",
    contentDensity: "Content Density",
    keyPointsOnly: "Key Points Only",
    detailedExplanations: "Detailed Explanations",
    comprehensiveCoverage: "Comprehensive Coverage",
    targetAudience: "Target Audience",
    mixedLevels: "Mixed Levels",
    informationDepth: "Information Depth",
    surfaceLevel: "Surface Level",
    deepDive: "Deep Dive",
    includeIntroOutroCards: "Include Intro/Outro Cards",
    includeSummaryCards: "Include Summary Cards",
    autoGenerateDefinitions: "Auto-Generate Definitions",
    includeExamples: "Include Examples",
    visualMediaIntegration: "Visual & Media Integration",
    autoSearchIncludeImages: "Auto-Search & Include Relevant Images",
    customImageSearchTerms: "Custom Image Search Terms (Optional)",
    customImageSearchPlaceholder: "Additional search terms for images...",
    cardsWithImages: "Cards with Images",
    preferredImageStyle: "Preferred Image Style",
    realisticPhotos: "Realistic Photos",
    illustrations: "Illustrations",
    diagramsCharts: "Diagrams & Charts",
    mixedStyles: "Mixed Styles",
    interactiveQuizConfiguration: "Interactive Quiz Configuration",
    includeInteractiveQuizQuestions: "Include Interactive Quiz Questions",
    quizQuestions: "Quiz Questions",
    quizTypes: "Quiz Types",
    multipleChoice: "Multiple Choice",
    trueFalse: "True/False",
    fillInBlank: "Fill in Blank",
    fillInBlankSettings: "Fill-in-Blank Settings",
    smartWordSelection: "Smart Word Selection (avoids common words)",
    avoidBlankingArticles: "Avoid blanking articles, prepositions, etc.",
    blankPercentage: "Blank Percentage",
    blankPercentageDescription: "Percentage of important words to blank out in each sentence",
    multipleChoiceVsTrueFalse: "Multiple Choice vs True/False Ratio",
    quizDifficulty: "Quiz Difficulty",
    easy: "Easy",
    medium: "Medium",
    hard: "Hard",
    mixedDifficulty: "Mixed Difficulty",
    advancedAiFeatures: "Advanced AI Features",
    generateRelatedTopics: "Generate Related Topics",
    adaptiveContentFlow: "Adaptive Content Flow",
    contentStyle: "Content Style",
    standard: "Standard",
    concise: "Concise",
    detailed: "Detailed",
    engagingFun: "Engaging & Fun",
    creative: "Creative",
    academic: "Academic",
    generatingAdvancedContent: "Generating Advanced Educational Content...",
    generateAdvancedCards: "Generate Advanced Educational Card",
    generateAdvancedCardsPlural: "Generate Advanced Educational Cards",
    withQuiz: "quiz",
    withImages: "with Images",
    smartTemplates: "Smart Templates",
    fixedLayout: "Fixed Layout",
    mixedLayouts: "Mixed Layouts",
    autoImages: "Auto Images",
    smartFillInBlank: "Smart Fill-in-Blank",
    adaptiveFlow: "Adaptive Flow",
    deckTitle: "Deck Title",
    deckTitlePlaceholder: "e.g., Advanced Medieval Architecture, Quantum Physics Fundamentals",
    deckDescription: "Description (Optional)",
    deckDescriptionPlaceholder: "Comprehensive educational content with interactive elements...",
    errorEnterTopic: "Please enter a topic for the flashcards.",
    errorEnterDeckTitle: "Please enter a deck title.",
    errorLoginRequired: "You must be logged in to generate cards.",
    errorSelectQuizType: "Please select at least one quiz type if including quiz questions.",
    errorGeneral: "Failed to generate flashcards. Please try again.",
    successGenerated: "Generated {totalCards} cards successfully! ({informationalCards} informational, {quizCards} quiz, {fillInBlankCards} fill-in-blank, {imagesGenerated} with images)",
    selectTemplate: "Select a template",
    generatingContent: "Generating content...",
    percentageCards: "{percentage}% of cards",
    percentageMC: "{percentage}% MC",
    generateCardsSingular: "Generate {count} Advanced Educational Card",
    generateCardsPlural: "Generate {count} Advanced Educational Cards",
    withQuizText: " ({quizCount} quiz)",
    withImagesText: " with Images",
  },
  messages: {
    success: {
      saved: "Successfully saved",
      created: "Successfully created",
      updated: "Successfully updated",
      deleted: "Successfully deleted",
      uploaded: "Successfully uploaded",
      downloaded: "Successfully downloaded",
      copied: "Successfully copied",
      moved: "Successfully moved",
      restored: "Successfully restored",
      published: "Successfully published",
      unpublished: "Successfully unpublished",
    },
    error: {
      general: "An error occurred",
      notFound: "Not found",
      unauthorized: "Unauthorized",
      forbidden: "Forbidden",
      validation: "Validation error",
      network: "Network error",
      server: "Server error",
      timeout: "Request timeout",
      fileSize: "File size too large",
      fileType: "Invalid file type",
      required: "This field is required",
      invalid: "Invalid value",
      duplicate: "Duplicate entry",
      limit: "Limit exceeded",
    },
    confirm: {
      delete: "Are you sure you want to delete this item?",
      save: "Are you sure you want to save changes?",
      discard: "Are you sure you want to discard changes?",
      leave: "Are you sure you want to leave this page?",
      reset: "Are you sure you want to reset?",
      clear: "Are you sure you want to clear all data?",
    },
  },
  placeholders: {
    search: "Search...",
    searchCards: "Search cards...",
    searchSets: "Search sets...",
    enterName: "Enter name...",
    enterTitle: "Enter title...",
    enterDescription: "Enter description...",
    enterContent: "Enter content...",
    enterUrl: "Enter URL...",
    selectOption: "Select an option...",
    noResults: "No results found",
    noItems: "No items",
    empty: "Empty",
    enterFirstName: "Enter your first name",
    enterLastName: "Enter your last name",
    selectLanguage: "Select language",
  },
  auth: {
    title: "SuperCards",
    signInSubtitle: "Sign in to your account",
    signUpSubtitle: "Create a new account",
    email: "Email",
    password: "Password",
    emailPlaceholder: "Enter your email",
    passwordPlaceholder: "Enter your password",
    signIn: "Sign In",
    signUp: "Sign Up",
    loading: "Loading...",
    welcomeBack: "Welcome back!",
    accountCreated: "Account created!",
    signInSuccess: "You have successfully signed in.",
    signUpSuccess: "Please check your email to verify your account.",
    unexpectedError: "An unexpected error occurred.",
    noAccount: "Don't have an account? Sign up",
    hasAccount: "Already have an account? Sign in",
  },
};

interface I18nContextType {
  language: string;
  setLanguage: (lang: string) => void;
  t: (key: string) => string;
}

const I18nContext = createContext<I18nContextType | undefined>(undefined);

export const I18nProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState('en');

  // Helper function to get nested translation value
  const getTranslation = (key: string): string => {
    const keys = key.split('.');
    let value: any = translations;
    
    for (const k of keys) {
      if (value && typeof value === 'object' && k in value) {
        value = value[k];
      } else {
        // Return the key itself as fallback if translation not found
        return key;
      }
    }
    
    return typeof value === 'string' ? value : key;
  };

  const t = (key: string): string => {
    return getTranslation(key);
  };

  // Load language preference from localStorage
  useEffect(() => {
    const savedLanguage = localStorage.getItem('language');
    if (savedLanguage) {
      setLanguage(savedLanguage);
    }
  }, []);

  // Save language preference to localStorage
  useEffect(() => {
    localStorage.setItem('language', language);
  }, [language]);

  return (
    <I18nContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </I18nContext.Provider>
  );
};

export const useI18n = () => {
  const context = useContext(I18nContext);
  if (context === undefined) {
    throw new Error('useI18n must be used within an I18nProvider');
  }
  return context;
};
